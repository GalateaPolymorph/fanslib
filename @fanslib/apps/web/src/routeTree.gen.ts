/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute, createRootRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as CalendarImport } from './routes/calendar/CalendarPage';
import { Route as ChannelsImport } from './routes/channels/ChannelsPage';
import { Route as IndexImport } from './routes/dashboard/DashboardPage';
import { Route as MediaImport } from './routes/media/MediaPage';
import { Route as PostsImport } from './routes/posts/PostsPage';
import { Route as SettingsImport } from './routes/settings/SettingsPage';

// Create/Update Routes

const SettingsRoute = SettingsImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any);

const PostsRoute = PostsImport.update({
  path: '/posts',
  getParentRoute: () => rootRoute,
} as any);

const MediaRoute = MediaImport.update({
  path: '/media',
  getParentRoute: () => rootRoute,
} as any);

const ChannelsRoute = ChannelsImport.update({
  path: '/channels',
  getParentRoute: () => rootRoute,
} as any);

const CalendarRoute = CalendarImport.update({
  path: '/calendar',
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    '/calendar': {
      id: '/calendar';
      path: '/calendar';
      fullPath: '/calendar';
      preLoaderRoute: typeof CalendarImport;
      parentRoute: typeof rootRoute;
    };
    '/channels': {
      id: '/channels';
      path: '/channels';
      fullPath: '/channels';
      preLoaderRoute: typeof ChannelsImport;
      parentRoute: typeof rootRoute;
    };
    '/media': {
      id: '/media';
      path: '/media';
      fullPath: '/media';
      preLoaderRoute: typeof MediaImport;
      parentRoute: typeof rootRoute;
    };
    '/posts': {
      id: '/posts';
      path: '/posts';
      fullPath: '/posts';
      preLoaderRoute: typeof PostsImport;
      parentRoute: typeof rootRoute;
    };
    '/settings': {
      id: '/settings';
      path: '/settings';
      fullPath: '/settings';
      preLoaderRoute: typeof SettingsImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  CalendarRoute,
  ChannelsRoute,
  MediaRoute,
  PostsRoute,
  SettingsRoute,
});

/* prettier-ignore-end */
