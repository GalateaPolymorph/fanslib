version: "3"

vars:
  NODE_CONFIG: tsconfig.node.json
  WEB_CONFIG: tsconfig.web.json

tasks:
  default:
    desc: List all tasks
    cmds:
      - task --list

  dev:
    desc: Start the electron app in development mode
    cmds:
      - bun run electron-vite dev

  build:
    desc: Build the electron app
    deps:
      - check:types
    cmds:
      - bun run electron-vite build

  build:unpack:
    desc: Build the electron app and unpack the dist folder
    deps:
      - build
    cmds:
      - bun run electron-builder --dir

  build:win:
    desc: Build the electron app for Windows
    deps:
      - build
    cmds:
      - bun run electron-builder --win

  build:mac:
    desc: Build the electron app for Mac
    cmds:
      - bun run electron-vite build
      - bun run electron-builder --mac

  build:linux:
    desc: Build the electron app for Linux
    cmds:
      - bun run electron-vite build
      - bun run electron-builder --linux

  check:types:node:
    desc: Check the types for the backend
    cmds:
      - bun run tsc --noEmit -p {{.NODE_CONFIG}} --composite false

  check:types:web:
    desc: Check the types for the frontend
    cmds:
      - bun run tsc --noEmit -p {{.WEB_CONFIG}} --composite false

  check:types:
    desc: Check the types for the electron package
    deps:
      - check:types:node
      - check:types:web

  check:lint:
    desc: Lint the code
    cmds:
      - bun run eslint src --ext .js,.jsx,.cjs,.mjs,.ts,.tsx,.cts,.mts --fix

  check:lint:fix:
    desc: Autofix linting errors
    cmds:
      - bun run eslint src --ext .js,.jsx,.cjs,.mjs,.ts,.tsx,.cts,.mts

  check:format:
    desc: Format the code
    cmds:
      - bun run prettier --write .

  check:format:check:
    desc: Check the formatting of the code
    cmds:
      - bun run prettier --check .

  check:
    deps:
      - check:format:check
      - check:lint:fix
      - check:types

  storybook:
    desc: Start the storybook server
    cmds:
      - bun run storybook dev -p 6006

  build:storybook:
    desc: Build storybook
    cmds:
      - bun run storybook build

  rebuild:
    desc: Rebuild native dependencies
    cmds:
      - bun run electron-rebuild -f -w sqlite3

  schema:fetch:
    desc: Fetch GraphQL schemas (for Postpone)
    cmds:
      - bun run ts-node scripts/fetch-schema.ts

  codegen:
    desc: Generate GraphQL types (for Postpone)
    cmds:
      - bun run graphql-codegen

  postinstall:
    desc: Install dependencies for the electron app
    cmds:
      - bun run electron-builder install-app-deps

  clean:
    desc: Clean the build output
    cmds:
      - rm -rf out
      - rm -rf dist
      - rm -rf .vite
